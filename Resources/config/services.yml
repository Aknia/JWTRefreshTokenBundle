parameters:
  gesdinet.jwtrefreshtoken.refresh_token.class: Gesdinet\JWTRefreshTokenBundle\Entity\RefreshToken

services:
    gesdinet_jwtrefreshtokenbundle.eventlistener.refreshtokenlistener:
        class: Gesdinet\JWTRefreshTokenBundle\EventListener\RefreshTokenListener
        arguments: [ @gesdinet.jwtrefreshtoken.refresh_token_manager, %gesdinet_jwt_refresh_token.ttl% ]
        tags:
            - { name: kernel.event_subscriber }

    gesdinet.jwtrefreshtoken.send_token:
        class: Gesdinet\JWTRefreshTokenBundle\EventListener\AttachRefreshTokenOnSuccessListener
        arguments: [ @gesdinet.jwtrefreshtoken.refresh_token_manager ]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: attachRefreshToken }

    gesdinet.jwtrefreshtoken.refresh_token_manager:
        class: Gesdinet\JWTRefreshTokenBundle\Doctrine\RefreshTokenManager
        arguments: [@fos_user.entity_manager, %gesdinet.jwtrefreshtoken.refresh_token.class%]

    gesdinet.jwtrefreshtoken.login_manager:
        class: Gesdinet\JWTRefreshTokenBundle\Doctrine\LoginManager
        arguments: [@security.token_storage, @security.user_checker, @security.firewall.map.context.api]